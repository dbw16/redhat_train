- name: Setup editing environment
  hosts: localhost
  become: false
  gather_facts: false

  vars:

    dir_list:
      - ~/.vim/autoload
      - ~/.vim/bundle
      - ~/.config/yamllint

    repo_list:
      - https://github.com/Yggdroot/indentLine.git
      - https://github.com/pedrohdz/vim-yaml-folds.git
      - https://github.com/dense-analysis/ale.git

    config_files:
      vim:
        file: vimrc
        dest: ~/.vimrc

      yamllint:
        file: config
        dest: ~/.config/yamllint/config

  tasks:

    - name: Ensure needed rpm packages are installed
      become: true
      ignore_errors: true
      dnf:
        name:
          - git
        state: installed

    - name: Ensure needed python packages are installed
      pip:
        name: yamllint
        state: present
        extra_args: --user

    - name: Ensure needed directories are present
      loop: "{{ dir_list }}"
      file:
        path: "{{ item }}"
        state: directory

    - name: Ensure pathogen is downloaded
      get_url:
        url: https://tpo.pe/pathogen.vim
        dest: ~/.vim/autoload/pathogen.vim

    - name: Ensure plugin repos are cloned
      loop: "{{ repo_list }}"
      git:
        repo: "{{ item }}"
        dest: ~/.vim/bundle/{{ item.split('/')[-1] | regex_replace('\.git$') }}

    - name: Ensure config files are copied
      loop: "{{ lookup('dict', config_files) }}"
      copy:
        src: "{{ item['value']['file'] }}"
        dest: "{{ item['value']['dest'] }}"

    - name: Ensure ~/.bashrc is configured
      blockinfile:
        path: ~/.bashrc
        block: |
          # Set editor for oc commands
          export EDITOR=/usr/bin/vim

          # Set bash history size
          export HISTSIZE=10000

          # Set bash history timestamps
          export HISTTIMEFORMAT="%F %T "

          # Append to .bash_history
          PROMPT_COMMAND="$PROMPT_COMMAND; history -a; history -n"

          # Set pager to not clear on exit
          export LESS='-X'

          # Source variables on new shell
          if [ -e /usr/local/etc/ocp4.config ]; then source /usr/local/etc/ocp4.config; fi

          # Set login aliases
          alias lcl="oc login -u admin -p redhat https://api.ocp4.example.com:6443"
          alias mcl="oc login -u admin -p redhat https://api.ocp4-mng.example.com:6443"

          # Set simpler variables
          M=$RHT_OCP4_MASTER_API
          WC=$RHT_OCP4_WILDCARD_DOMAIN
          NS=$RHT_OCP4_NEXUS_SERVER
          U=$RHT_OCP4_DEV_USER
          P=$RHT_OCP4_DEV_PASSWORD
          G=$RHT_OCP4_GITHUB_USER
          Q=$RHT_OCP4_QUAY_USER

          # Git bash
          source /usr/share/git-core/contrib/completion/git-prompt.sh
          export GIT_PS1_SHOWDIRTYSTATE=true
          export GIT_PS1_SHOWUNTRACKEDFILES=true
          export PS1='[\u@\h \W$(declare -F __git_ps1 &>/dev/null && __git_ps1 " (%s)")]\$ '

    - name: Ensure resolution is configured
      copy:
        src: monitors.xml
        dest: ~/.config

    - name: Ensure terminal starts maximized
      copy:
        src: org.gnome.Terminal.desktop
        dest: ~/.local/share/applications/org.gnome.Terminal.desktop

    - name: Ensure resolution is set
      command: xrandr --size 1920x1080

    - name: Ensure terminal terminates
      command: |
        killall gnome-terminal-server
